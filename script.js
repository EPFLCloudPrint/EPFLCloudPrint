// Generated by CoffeeScript 1.7.1
(function() {
  var addFile, centerCloud, centerDialog, clearFileList, files, message, removeFile, removeFileServer, sendPrint, showError, showPrint, showUpload, toggleSelectedOnly, toggleSelection, updateProgression, uploadFiles, wasTicked;

  $(document).ready(function() {
    if (Dropbox.isBrowserSupported()) {
      return $('#dropboxButton').show().click(function() {
        $('#printButton').addClass('_disabled');
        $('#tickPath').hide();
        return Dropbox.choose({
          success: function(fs) {
            var m, n;
            if (fs.length > 0) {
              updateProgression(5, 100);
              showPrint();
              m = fs.length;
              n = fs.length;
              return fs.forEach(function(f) {
                return $.post('php/dropbox.php', {
                  dropbox_url: f.link,
                  file_name: f.name
                }, function(e) {
                  var exeption, rep;
                  rep = (function() {
                    try {
                      return JSON.parse(e);
                    } catch (_error) {
                      exeption = _error;
                      return {
                        'error_code': -1
                      };
                    }
                  })();
                  addFile({
                    file_name: rep['file_name'],
                    server_file_name: rep['server_file_name']
                  });
                  if (--n === 0 && m === 1) {
                    $("#cloudPath").attr('fill', 'white');
                    $("#tickPath").show();
                    return $('#printButton').removeClass('_disabled');
                  } else if (n === 0) {
                    $('#tickPath').hide();
                    $('#cloudPath').attr('fill', 'url(#progression)');
                    $('#progression stop').attr('offset', 100 + "%");
                    $('#printButton').removeClass('_disabled');
                    return setTimeout((function() {
                      $("#cloudPath").attr('fill', 'white');
                      return $("#tickPath").show();
                    }), 1000);
                  } else {
                    return updateProgression(m - n, m);
                  }
                });
              });
            }
          },
          linkType: "direct",
          multiselect: true,
          extensions: ['.pdf']
        });
      });
    }
  });

  showError = function(field) {
    field.addClass('_error');
    return field.click(function(event) {
      $(this).removeClass('_error');
      return $(this).unbind(event);
    });
  };

  jQuery.fn.check = function() {
    var def, max, min, v;
    if ($(this).hasClass('_numberField')) {
      min = $(this).attr('min');
      max = $(this).attr('max');
      def = $(this).attr('default');
      v = parseInt($(this).val()) || def || min || 1;
      v = v >= min ? v : min;
      return $(this).val(v);
    }
  };

  jQuery.fn.validate = function() {
    var form, result;
    result = {};
    form = $(this);
    form.find('input').each(function() {
      return $(this).removeClass('_error');
    });
    form.find('input._nonempty').each(function() {
      if ($(this).val() === "") {
        result['error'] = true;
        return showError($(this));
      } else {
        return result[$(this).attr('name')] = $(this).val();
      }
    });
    form.find('._checkbox').each(function() {
      return result[$(this).attr('name')] = $(this).hasClass('_checked');
    });
    form.find('._numberField').each(function() {
      return result[$(this).attr('name')] = parseInt($(this).val());
    });
    form.find('._radioGroup').each(function() {
      return result[$(this).attr('name')] = $(this).find('._radiobox._checked').attr('name');
    });
    return result;
  };

  $(document).ready(function() {
    $('._checkbox').click(function(event) {
      event.preventDefault();
      if ($(this).hasClass('_checked')) {
        $(this).removeClass('_checked').addClass('_unchecked');
      } else {
        $(this).removeClass('_unchecked').addClass('_checked');
      }
      return $(this).trigger('valueChanged');
    });
    $('._radiobox').click(function(event) {
      event.preventDefault();
      if ($(this).hasClass('_unchecked')) {
        $(this).parents('._radioGroup').children('._radiobox').removeClass('_checked').addClass('_unchecked');
        $(this).removeClass('_unchecked').addClass('_checked');
        return $(this).parents('._radioGroup').trigger('valueChanged');
      }
    });
    $('._label').click(function(event) {
      event.preventDefault();
      return $('.' + $(this).attr('for')).click();
    });
    $('form').attr('onSubmit', "return false");
    $('.submit._button').click(function() {
      return $(this).parents('form').submit();
    });
    return $('input._numberField').change(function() {
      return $(this).check();
    });
  });

  sendPrint = function() {
    var form;
    form = $('#printForm').validate();
    if (!form['error']) {
      $('#printButton').addClass('_disabled');
      return $.ajax('php/print.php', {
        type: "POST",
        data: form,
        success: function(response) {
          var exeption, n, rep;
          rep = (function() {
            try {
              return JSON.parse(response);
            } catch (_error) {
              exeption = _error;
              return {
                'error_code': -1
              };
            }
          })();
          switch (rep['error_code']) {
            case 0:
              n = files.length;
              clearFileList();
              $('#printButton').addClass('_disabled');
              message('The document' + (n > 1 ? 's were' : ' was') + ' sent to the printer');
              setTimeout((function() {
                return $('#tickPath').hide();
              }), 5000);
              return showUpload();
            case 2:
              return showError('A problem occured with dropbox');
            default:
              return showError('An error occured while printing the documents...');
          }
        },
        error: function() {
          return showError('An error occured while printing the documents...');
        }
      });
    }
  };

  $(document).ready(function() {
    return $('#printButton').click(sendPrint);
  });

  showError = function(m) {
    $('#tickPath').hide();
    message(m);
    clearFileList();
    return showUpload();
  };

  centerCloud = function() {
    var h;
    if ($('div.container').width() >= 768) {
      h = Math.max(0, ($('.container').height() - 60 - $('#cloudPicture').height()) / 2);
      return $('#cloud').css('margin-top', h);
    } else {
      return $('#cloud').css('margin-top', 0);
    }
  };

  centerDialog = function() {
    var h;
    if ($('.container').width() >= 768) {
      h = Math.max(0, ($('div.container').height() - 40 - $('#dialog').height()) / 2);
      return $('#dialog').css('margin-top', h);
    } else {
      return $('#dialog').css('margin-top', 0);
    }
  };

  message = function(m) {
    return $('#message').html(m).slideDown(1000, function() {
      return setTimeout((function() {
        return $('#message').slideUp(1000);
      }), 3000);
    });
  };

  toggleSelectedOnly = function() {
    if ($('.selectedonly').hasClass('_checked')) {
      $('.fromto').slideDown();
      $('.from._numberField').val("");
      return $('.to._numberField').val("");
    } else {
      return $('.fromto').slideUp();
    }
  };

  toggleSelection = function() {
    $('.all._radiobox').click();
    if (files.length === 1) {
      return $('._radioGroup.selection').slideDown(centerDialog);
    } else {
      return $('._radioGroup.selection').slideUp(centerDialog);
    }
  };

  showUpload = function() {
    $('.options').slideUp(function() {
      return $('#buttonWrapper').slideDown(centerDialog);
    });
    return $('.formUpload')[0].reset();
  };

  showPrint = function() {
    return $('#buttonWrapper').slideUp(function() {
      return $('.options').slideDown(centerDialog);
    });
  };

  updateProgression = function(loaded, total) {
    $('#tickPath').hide();
    $('#cloudPath').attr('fill', 'url(#progression)');
    return $('#progression stop').attr('offset', loaded / total * 100 + "%");
  };

  wasTicked = false;

  $(document).ready(function() {
    $(document.body).bind("dragover drop", function(e) {
      e.preventDefault();
      return false;
    });
    $('#cloudPath').bind("dragenter", function(e) {
      wasTicked = $('#tickPath').css('display') === !'none';
      $('#tickPath').hide();
      $('#arrowPath').css('fill', '#34495e');
      return $('#arrowPath').css('stroke', '#34495e');
    });
    $('#cloudPath').bind("dragleave", function() {
      if (wasTicked) {
        $('#tickPath').show();
      }
      $('#arrowPath').css('fill', 'none');
      return $('#arrowPath').css('stroke', 'none');
    });
    $('#cloudPath').bind("drop", function(e) {
      var files;
      $('#cloudPath').trigger('dragleave');
      files = e.originalEvent.target.files || e.originalEvent.dataTransfer.files;
      return uploadFiles(files.filter(function(f) {
        return f.type === "application/pdf";
      }));
    });
    $('#uploadButton').bind("dragenter dragover", function() {
      return $(this).addClass('drop');
    });
    $('#uploadButton').bind("dragleave", function() {
      return $(this).removeClass('drop');
    });
    return $('#uploadButton').bind("drop", function(e) {
      var files;
      $('#uploadButton').trigger('dragleave');
      files = e.originalEvent.target.files || e.originalEvent.dataTransfer.files;
      return uploadFiles(files.filter(function(f) {
        return f.type === "application/pdf";
      }));
    });
  });

  $(document).ready(function() {
    $('.logout').click(function() {
      return location.replace('tequila/logout.php');
    });
    $('#cloudPath').click(function() {
      return $('.fileInput').click();
    });
    $('#uploadButton').click(function() {
      return $('.fileInput').click();
    });
    $('form.formUpload').change(function() {
      return uploadFiles($(".fileInput")[0].files);
    });
    $('.selection._radioGroup').bind('valueChanged', toggleSelectedOnly);
    $('.from').change(function() {
      $('.to').attr('min', $('.from').val);
      return $('.to').check();
    });
    centerCloud();
    centerDialog();
    $(window).resize(function() {
      centerCloud();
      return centerDialog();
    });
    return setTimeout(function() {
      return $('#cloud, #dialog').css('transition', 'margin-top 1s');
    });
  });

  files = [];

  addFile = function(file) {
    var name;
    files.push(file);
    name = file.file_name.length < 40 ? file.file_name : file.file_name.slice(0, 18) + "..." + file.file_name.slice(-10);
    $('#fileList').append("<li style='display: none;'> <img class='cancel' src='images/cancel.png' alt='remove file'/>" + name + "</li>");
    $('#fileList li').slideDown('very slow');
    toggleSelection();
    return $('.cancel').unbind('click').click(removeFile);
  };

  removeFile = function() {
    var file, id, index;
    id = $('li').index($(this).parent('li'));
    removeFileServer(files[id]['server_file_name']);
    files = (function() {
      var _i, _len, _results;
      _results = [];
      for (index = _i = 0, _len = files.length; _i < _len; index = ++_i) {
        file = files[index];
        if (index !== id) {
          _results.push(file);
        }
      }
      return _results;
    })();
    $(this).parent('li').slideUp('very slow', function() {
      return $(this).remove();
    });
    if (files.length === 0) {
      $("#tickPath").hide();
      return showUpload();
    } else if (files.length === 1) {
      return toggleSelection();
    }
  };

  removeFileServer = function(server_file_name) {
    return $.post('php/remove_file.php', {
      'server_file_name': server_file_name
    });
  };

  clearFileList = function() {
    var f, _i, _len;
    $('#fileList').slideUp().html('').slideDown();
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      f = files[_i];
      removeFileServer(f['server_file_name']);
    }
    return files = [];
  };

  uploadFiles = function(fs) {
    var f, fd, xhr, _i, _len;
    $('#printButton').addClass('_disabled');
    fd = new FormData();
    for (_i = 0, _len = fs.length; _i < _len; _i++) {
      f = fs[_i];
      fd.append('file[]', f);
    }
    xhr = new XMLHttpRequest();
    xhr.upload.addEventListener("progress", function(e) {
      return updateProgression(e.loaded, e.total);
    });
    xhr.addEventListener("loadend", function(e) {
      var rep, _j, _len1, _ref;
      $('.formUpload')[0].reset();
      rep = (function() {
        try {
          return JSON.parse(e.currentTarget.responseText);
        } catch (_error) {
          e = _error;
          return {
            'error_code': -1
          };
        }
      })();
      if (rep['error_code'] === 0) {
        $('#cloudPath').attr('fill', 'white');
        $('#tickPath').show();
        _ref = rep['files'];
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          f = _ref[_j];
          addFile(f);
        }
        return $('#printButton').removeClass('_disabled');
      } else {
        $("#tickPath").hide();
        $('#cloudPath').attr('fill', 'white');
        message('An error occured, please retry...');
        clearFileList();
        return showUpload();
      }
    });
    xhr.open("POST", "php/upload_file.php");
    xhr.send(fd);
    return showPrint();
  };

}).call(this);
