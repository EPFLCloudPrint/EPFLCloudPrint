// Generated by CoffeeScript 1.7.1
var centerAll, centerButtons, centerCloud, centerDialog, centeringProcessing, files, message, sendPrint, showError, startCentering, stopCentering, toggleSelectionMode, toggleThePrintMode, toggleTheUploadMode, updateFilesList, uploadFile, wasTicked;

$(document).ready(function() {
  if (Dropbox.isBrowserSupported()) {
    return $('.dropbox._button').show().click(function() {
      return Dropbox.choose({
        success: function(fs) {
          var f, _i, _len;
          for (_i = 0, _len = fs.length; _i < _len; _i++) {
            f = fs[_i];
            files.push({
              dropbox_url: f.link,
              file_name: f.name
            });
          }
          updateFilesList();
          $("#tick_path").show();
          toggleThePrintMode();
          return $('.print._button').removeClass('_disabled');
        },
        linkType: "direct",
        multiselect: true,
        extensions: ['.pdf']
      });
    });
  }
});

showError = function(field) {
  field.addClass('_error');
  return field.click(function(event) {
    $(this).removeClass('_error');
    return $(this).unbind(event);
  });
};

jQuery.fn.check = function() {
  var def, max, min, v;
  if ($(this).hasClass('_numberField')) {
    min = $(this).attr('min');
    max = $(this).attr('max');
    def = $(this).attr('default');
    v = parseInt($(this).val()) || def || min || 1;
    v = v >= min ? v : min;
    return $(this).val(v);
  }
};

jQuery.fn.validate = function() {
  var form, result;
  result = {};
  form = $(this);
  console.log(form);
  form.find('input').each(function() {
    return $(this).removeClass('_error');
  });
  form.find('input._nonempty').each(function() {
    if ($(this).val() === "") {
      result['error'] = true;
      return showError($(this));
    } else {
      return result[$(this).attr('name')] = $(this).val();
    }
  });
  form.find('._checkbox').each(function() {
    return result[$(this).attr('name')] = $(this).hasClass('_checked');
  });
  form.find('._radioGroup').each(function() {
    return result[$(this).attr('name')] = $(this).find('._radiobox._checked').attr('name');
  });
  return result;
};

$(document).ready(function() {
  $('._checkbox').click(function() {
    event.preventDefault();
    if ($(this).hasClass('_checked')) {
      $(this).removeClass('_checked').addClass('_unchecked');
    } else {
      $(this).removeClass('_unchecked').addClass('_checked');
    }
    return $(this).trigger('valueChanged');
  });
  $('._radiobox').click(function() {
    event.preventDefault();
    if ($(this).hasClass('_unchecked')) {
      $(this).parents('._radioGroup').children('._radiobox').removeClass('_checked').addClass('_unchecked');
      $(this).removeClass('_unchecked').addClass('_checked');
      return $(this).parents('._radioGroup').trigger('valueChanged');
    }
  });
  $('._label').click(function() {
    event.preventDefault();
    return $('.' + $(this).attr('for')).click();
  });
  $('form').attr('onSubmit', "return false");
  $('.submit._button').click(function() {
    return $(this).parents('form').submit();
  });
  return $('input._numberField').change(function() {
    return $(this).check();
  });
});

sendPrint = function() {
  var form;
  form = $('#printForm').validate();
  if (!form['error']) {
    form['gaspar'] = GASPAR;
    form['files'] = files;
    $('.print._button').addClass('_disabled');
    return $.ajax('php/print.php', {
      type: "POST",
      data: form,
      success: function(response) {
        var exeption, rep;
        rep = (function() {
          try {
            return JSON.parse(response);
          } catch (_error) {
            exeption = _error;
            return {
              'error_code': -1
            };
          }
        })();
        switch (rep['error_code']) {
          case 0:
            message('The document' + (files.length > 1 ? 's were' : ' was') + ' sent to the printer');
            return toggleTheUploadMode("UPLOAD NEW FILES");
          case 2:
            return message('A problem occured with dropbox');
          case 3:
            showError($('.gaspar, .password'));
            return message('Please check your credentials');
          default:
            return message('An error occured while printing the document...');
        }
      },
      error: function() {
        return message('An error occured while printing the document...');
      },
      complete: function() {
        var files;
        files = [];
        return $('.print._button').removeClass('_disabled');
      }
    });
  }
};

$(document).ready(function() {
  return $('.print._button').click(sendPrint);
});

centerCloud = function() {
  var h;
  if ($('div.container').width() >= 768) {
    h = Math.max(0, ($('.container').height() - 45 - $('.cloud').height()) / 2);
    return $('.cloud').css('margin-top', h);
  } else {
    return $('.cloud').css('margin-top', 0);
  }
};

centerDialog = function() {
  var h;
  if ($('.container').width() >= 768) {
    h = Math.max(0, ($('div.container').height() - 45 - $('div.dialog').height()) / 2);
    return $('.dialog').css('margin-top', h);
  } else {
    return $('.dialog').css('margin-top', 0);
  }
};

centerButtons = function() {
  switch ($('.container').width()) {
    case 300:
      $('.upload._button').css('margin-left', ($('.dialog').width() - $('.upload._button').width()) / 2);
      return $('.dropbox._button').css('margin-left', ($('.dialog').width() - $('.dropbox._button').width()) / 2);
    case 420:
    case 960:
      $('.upload._button').css('margin-left', 0);
      return $('.dropbox._button').css('margin-left', "10px");
    case 768:
      $('.upload._button').css('margin-left', 0);
      return $('.dropbox._button').css('margin-left', 0);
  }
};

centerAll = function() {
  centerDialog();
  centerCloud();
  return centerButtons();
};

centeringProcessing = [];

startCentering = function() {
  var proc;
  proc = setInterval(centerAll, 10);
  return centeringProcessing.push(proc);
};

stopCentering = function() {
  if (centeringProcessing.length > 0) {
    return clearInterval(centeringProcessing.shift);
  }
};

message = function(m) {
  $('.message').html(m);
  return centerCloud();
};

toggleSelectionMode = function() {
  startCentering();
  if ($('.selectedonly').hasClass('_checked')) {
    $('.fromto').slideDown('normal', stopCentering);
    $('.from._numberField').val("");
    return $('.to._numberField').val("");
  } else {
    return $('.fromto').slideUp('normal', stopCentering);
  }
};

toggleTheUploadMode = function(buttonName) {
  $('.options').hide();
  $('.formUpload')[0].reset();
  $('.upload._button').html(buttonName);
  return $('._empty._button').show(centerAll);
};

toggleThePrintMode = function() {
  startCentering();
  $('._empty._button').hide();
  return $('.options').slideDown(1000, stopCentering);
};

wasTicked = false;

$(document).ready(function() {
  $(document.body).bind("dragover", function(e) {
    e.preventDefault();
    return false;
  });
  $(document.body).bind("drop", function(e) {
    e.preventDefault();
    return false;
  });
  $('#cloud_path').bind("dragenter", function() {
    wasTicked = $('#tick_path').css('display') === !'none';
    $('#tick_path').hide();
    $('#arrow_path').css('fill', '#34495e');
    return $('#arrow_path').css('stroke', '#34495e');
  });
  $('#cloud_path').bind("dragleave", function() {
    if (wasTicked) {
      $('#tick_path').show();
    }
    $('#arrow_path').css('fill', 'none');
    return $('#arrow_path').css('stroke', 'none');
  });
  $('#cloud_path').bind("drop", function(e) {
    var file, files, _i, _len, _results;
    $('#cloud_path').trigger('dragleave');
    files = e.originalEvent.target.files || e.originalEvent.dataTransfer.files;
    _results = [];
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      file = files[_i];
      if (file.type === "application/pdf") {
        _results.push(uploadFile(file));
      }
    }
    return _results;
  });
  $('.upload._button').bind("dragenter", function() {
    return $(this).addClass('drop');
  });
  $('.upload._button').bind("dragleave", function() {
    return $(this).removeClass('drop');
  });
  return $('.upload._button').bind("drop", function(e) {
    var file, files, _i, _len, _results;
    $('.upload._button').trigger('dragleave');
    files = e.originalEvent.target.files || e.originalEvent.dataTransfer.files;
    _results = [];
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      file = files[_i];
      if (file.type === "application/pdf") {
        _results.push(uploadFile(file));
      }
    }
    return _results;
  });
});

$(document).ready(function() {
  centerAll();
  $(window).resize(centerAll);
  $('.logout').click(function() {
    return location.replace('tequila/logout.php');
  });
  $('#cloud_path').click(function() {
    return $('.fileInput').click();
  });
  $('.upload._button').click(function() {
    return $('.fileInput').click();
  });
  $('form.formUpload').change(function() {
    var file, _i, _len, _ref, _results;
    _ref = $(".fileInput")[0].files;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      file = _ref[_i];
      _results.push(uploadFile(file));
    }
    return _results;
  });
  $('.from').change(function() {
    $('.to').attr('min', $('.from').val);
    return $('.to').check();
  });
  return $('.selection._radioGroup').on('valueChanged', toggleSelectionMode);
});

files = [];

updateFilesList = function() {
  var f, name, _i, _len;
  $('.message').html("<ul id='files'></ul>");
  for (_i = 0, _len = files.length; _i < _len; _i++) {
    f = files[_i];
    name = f.file_name.length < 30 ? f.file_name : f.file_name.slice(0, 15) + "..." + f.file_name.slice(-14);
    $('#files').append("<li><span class='removeFile'>" + name + "</span></li>");
  }
  if (files.length > 1) {
    $('.all._radiobox').click();
    $('._radioGroup.selection').hide(centerDialog);
  } else if ($('._radioGroup.selection').css('display') === 'none') {
    $('._radioGroup.selection').show(centerDialog);
  }
  centerCloud();
  return $('span.removeFile').click(function() {
    files.splice($(this).index(), 1);
    if (files.length === 0) {
      toggleTheUploadMode();
      $("#tick_path").hide();
    }
    return updateFilesList();
  });
};

uploadFile = function(file) {
  var fd, xhr;
  toggleThePrintMode();
  $('.print._button').addClass('_disabled');
  fd = new FormData();
  fd.append('file', file);
  xhr = new XMLHttpRequest();
  xhr.addEventListener("loadend", function(e) {
    var rep;
    rep = (function() {
      try {
        return JSON.parse(e.currentTarget.responseText);
      } catch (_error) {
        e = _error;
        return {
          'error_code': -1
        };
      }
    })();
    if (rep['error_code'] === 0) {
      $("#tick_path").show();
      files.push({
        file_name: rep['file_name'],
        server_file_name: rep['server_file_name']
      });
      $('.print._button').removeClass('_disabled');
      return updateFilesList();
    } else {
      $("#tick_path").hide();
      message('An error occured, please retry...');
      return toggleTheUploadMode("UPLOAD YOUR FILES");
    }
  });
  xhr.open("POST", "php/upload_file.php");
  return xhr.send(fd);
};
